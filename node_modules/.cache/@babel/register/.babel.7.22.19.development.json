{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Twitter clone\\\\backend\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Twitter clone\\\\backend\",\"filename\":\"C:\\\\Twitter clone\\\\backend\\\\app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Twitter clone\\\\backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.19:development":{"value":{"code":"const {\n  ApolloServer,\n  gql\n} = require('apollo-server-express');\nconst express = require('express');\nconst cors = require('cors');\nconst fs = require('fs');\nconst app = express();\nconst port = process.env.PORT || 3009;\nconst startServer = async () => {\n  app.use(express.urlencoded({\n    extended: true\n  }));\n  app.use(express.json());\n  const corsOptions = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    credentials: true,\n    exposedHeaders: ['X-auth-token']\n  };\n  app.use(cors(corsOptions));\n  const typeDefs = gql(fs.readFileSync('./schema.graphql', {\n    encoding: 'utf-8'\n  }));\n  const resolvers = require('./resolvers.mjs');\n  const apolloServer = new ApolloServer({\n    typeDefs,\n    resolvers\n  });\n  apolloServer.applyMiddleware({\n    app,\n    path: '/graphql'\n  });\n  app.listen(port, () => {\n    console.log(`Server running at ${port}`);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBcG9sbG9TZXJ2ZXIiLCJncWwiLCJyZXF1aXJlIiwiZXhwcmVzcyIsImNvcnMiLCJmcyIsImFwcCIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInN0YXJ0U2VydmVyIiwidXNlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsImNvcnNPcHRpb25zIiwib3JpZ2luIiwibWV0aG9kcyIsImNyZWRlbnRpYWxzIiwiZXhwb3NlZEhlYWRlcnMiLCJ0eXBlRGVmcyIsInJlYWRGaWxlU3luYyIsImVuY29kaW5nIiwicmVzb2x2ZXJzIiwiYXBvbGxvU2VydmVyIiwiYXBwbHlNaWRkbGV3YXJlIiwicGF0aCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6IkM6XFxUd2l0dGVyIGNsb25lXFxiYWNrZW5kXFwiLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IEFwb2xsb1NlcnZlciwgZ3FsIH0gPSByZXF1aXJlKCdhcG9sbG8tc2VydmVyLWV4cHJlc3MnKTtcclxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcclxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDA5O1xyXG5cclxuY29uc3Qgc3RhcnRTZXJ2ZXIgPSBhc3luYyAoKSA9PiB7XHJcbiAgYXBwLnVzZShleHByZXNzLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XHJcbiAgYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbiAgY29uc3QgY29yc09wdGlvbnMgPSB7XHJcbiAgICBvcmlnaW46ICcqJyxcclxuICAgIG1ldGhvZHM6ICdHRVQsSEVBRCxQVVQsUEFUQ0gsUE9TVCxERUxFVEUnLFxyXG4gICAgY3JlZGVudGlhbHM6IHRydWUsXHJcbiAgICBleHBvc2VkSGVhZGVyczogWydYLWF1dGgtdG9rZW4nXSxcclxuICB9O1xyXG5cclxuICBhcHAudXNlKGNvcnMoY29yc09wdGlvbnMpKTtcclxuXHJcbiAgY29uc3QgdHlwZURlZnMgPSBncWwoXHJcbiAgICBmcy5yZWFkRmlsZVN5bmMoJy4vc2NoZW1hLmdyYXBocWwnLCB7IGVuY29kaW5nOiAndXRmLTgnIH0pXHJcbiAgKTtcclxuXHJcbiAgY29uc3QgcmVzb2x2ZXJzID0gcmVxdWlyZSgnLi9yZXNvbHZlcnMubWpzJyk7XHJcblxyXG4gIGNvbnN0IGFwb2xsb1NlcnZlciA9IG5ldyBBcG9sbG9TZXJ2ZXIoeyB0eXBlRGVmcywgcmVzb2x2ZXJzIH0pO1xyXG4gIGFwb2xsb1NlcnZlci5hcHBseU1pZGRsZXdhcmUoeyBhcHAsIHBhdGg6ICcvZ3JhcGhxbCcgfSk7XHJcblxyXG4gIGFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYFNlcnZlciBydW5uaW5nIGF0ICR7cG9ydH1gKTtcclxuICB9KTtcclxufTtcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQSxZQUFZO0VBQUVDO0FBQUksQ0FBQyxHQUFHQyxPQUFPLENBQUMsdUJBQXVCLENBQUM7QUFDOUQsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ2xDLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUM1QixNQUFNRyxFQUFFLEdBQUdILE9BQU8sQ0FBQyxJQUFJLENBQUM7QUFDeEIsTUFBTUksR0FBRyxHQUFHSCxPQUFPLENBQUMsQ0FBQztBQUVyQixNQUFNSSxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxJQUFJLElBQUksSUFBSTtBQUVyQyxNQUFNQyxXQUFXLEdBQUcsTUFBQUEsQ0FBQSxLQUFZO0VBQzlCTCxHQUFHLENBQUNNLEdBQUcsQ0FBQ1QsT0FBTyxDQUFDVSxVQUFVLENBQUM7SUFBRUMsUUFBUSxFQUFFO0VBQUssQ0FBQyxDQUFDLENBQUM7RUFDL0NSLEdBQUcsQ0FBQ00sR0FBRyxDQUFDVCxPQUFPLENBQUNZLElBQUksQ0FBQyxDQUFDLENBQUM7RUFDdkIsTUFBTUMsV0FBVyxHQUFHO0lBQ2xCQyxNQUFNLEVBQUUsR0FBRztJQUNYQyxPQUFPLEVBQUUsZ0NBQWdDO0lBQ3pDQyxXQUFXLEVBQUUsSUFBSTtJQUNqQkMsY0FBYyxFQUFFLENBQUMsY0FBYztFQUNqQyxDQUFDO0VBRURkLEdBQUcsQ0FBQ00sR0FBRyxDQUFDUixJQUFJLENBQUNZLFdBQVcsQ0FBQyxDQUFDO0VBRTFCLE1BQU1LLFFBQVEsR0FBR3BCLEdBQUcsQ0FDbEJJLEVBQUUsQ0FBQ2lCLFlBQVksQ0FBQyxrQkFBa0IsRUFBRTtJQUFFQyxRQUFRLEVBQUU7RUFBUSxDQUFDLENBQzNELENBQUM7RUFFRCxNQUFNQyxTQUFTLEdBQUd0QixPQUFPLENBQUMsaUJBQWlCLENBQUM7RUFFNUMsTUFBTXVCLFlBQVksR0FBRyxJQUFJekIsWUFBWSxDQUFDO0lBQUVxQixRQUFRO0lBQUVHO0VBQVUsQ0FBQyxDQUFDO0VBQzlEQyxZQUFZLENBQUNDLGVBQWUsQ0FBQztJQUFFcEIsR0FBRztJQUFFcUIsSUFBSSxFQUFFO0VBQVcsQ0FBQyxDQUFDO0VBRXZEckIsR0FBRyxDQUFDc0IsTUFBTSxDQUFDckIsSUFBSSxFQUFFLE1BQU07SUFDckJzQixPQUFPLENBQUNDLEdBQUcsQ0FBRSxxQkFBb0J2QixJQUFLLEVBQUMsQ0FBQztFQUMxQyxDQUFDLENBQUM7QUFDSixDQUFDIn0=","map":{"version":3,"names":["ApolloServer","gql","require","express","cors","fs","app","port","process","env","PORT","startServer","use","urlencoded","extended","json","corsOptions","origin","methods","credentials","exposedHeaders","typeDefs","readFileSync","encoding","resolvers","apolloServer","applyMiddleware","path","listen","console","log"],"sourceRoot":"C:\\Twitter clone\\backend\\","sources":["app.js"],"sourcesContent":["const { ApolloServer, gql } = require('apollo-server-express');\r\nconst express = require('express');\r\nconst cors = require('cors');\r\nconst fs = require('fs');\r\nconst app = express();\r\n\r\nconst port = process.env.PORT || 3009;\r\n\r\nconst startServer = async () => {\r\n  app.use(express.urlencoded({ extended: true }));\r\n  app.use(express.json());\r\n  const corsOptions = {\r\n    origin: '*',\r\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\r\n    credentials: true,\r\n    exposedHeaders: ['X-auth-token'],\r\n  };\r\n\r\n  app.use(cors(corsOptions));\r\n\r\n  const typeDefs = gql(\r\n    fs.readFileSync('./schema.graphql', { encoding: 'utf-8' })\r\n  );\r\n\r\n  const resolvers = require('./resolvers.mjs');\r\n\r\n  const apolloServer = new ApolloServer({ typeDefs, resolvers });\r\n  apolloServer.applyMiddleware({ app, path: '/graphql' });\r\n\r\n  app.listen(port, () => {\r\n    console.log(`Server running at ${port}`);\r\n  });\r\n};\r\n\r\n"],"mappings":"AAAA,MAAM;EAAEA,YAAY;EAAEC;AAAI,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC9D,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,EAAE,GAAGH,OAAO,CAAC,IAAI,CAAC;AACxB,MAAMI,GAAG,GAAGH,OAAO,CAAC,CAAC;AAErB,MAAMI,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AAErC,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9BL,GAAG,CAACM,GAAG,CAACT,OAAO,CAACU,UAAU,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC,CAAC;EAC/CR,GAAG,CAACM,GAAG,CAACT,OAAO,CAACY,IAAI,CAAC,CAAC,CAAC;EACvB,MAAMC,WAAW,GAAG;IAClBC,MAAM,EAAE,GAAG;IACXC,OAAO,EAAE,gCAAgC;IACzCC,WAAW,EAAE,IAAI;IACjBC,cAAc,EAAE,CAAC,cAAc;EACjC,CAAC;EAEDd,GAAG,CAACM,GAAG,CAACR,IAAI,CAACY,WAAW,CAAC,CAAC;EAE1B,MAAMK,QAAQ,GAAGpB,GAAG,CAClBI,EAAE,CAACiB,YAAY,CAAC,kBAAkB,EAAE;IAAEC,QAAQ,EAAE;EAAQ,CAAC,CAC3D,CAAC;EAED,MAAMC,SAAS,GAAGtB,OAAO,CAAC,iBAAiB,CAAC;EAE5C,MAAMuB,YAAY,GAAG,IAAIzB,YAAY,CAAC;IAAEqB,QAAQ;IAAEG;EAAU,CAAC,CAAC;EAC9DC,YAAY,CAACC,eAAe,CAAC;IAAEpB,GAAG;IAAEqB,IAAI,EAAE;EAAW,CAAC,CAAC;EAEvDrB,GAAG,CAACsB,MAAM,CAACrB,IAAI,EAAE,MAAM;IACrBsB,OAAO,CAACC,GAAG,CAAE,qBAAoBvB,IAAK,EAAC,CAAC;EAC1C,CAAC,CAAC;AACJ,CAAC"}},"mtime":1694779175627}}